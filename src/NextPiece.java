
import java.awt.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alu54279423k
 */
public class NextPiece extends javax.swing.JPanel {
    
    public static final Color COLORS[] = {
            new Color(30, 30, 30), 
            new Color(204, 102, 102), 
            new Color(102, 204, 102), 
            new Color(102, 102, 204), 
            new Color(204, 204, 102), 
            new Color(204, 102, 204), 
            new Color(102, 204, 204), 
            new Color(218, 170, 0)};
    private Shape currentShape;
    public final static int NUM_COLS = 10;
    public final static int NUM_ROWS = 10;
    
    public NextPiece() {
        initComponents();
        currentShape = new Shape();
    }
    
    public void nextPiece() {
        currentShape = new Shape();
        repaint();
    }
    
    public Shape getCurrentShape() {
        return currentShape;
    }
    
    private void paintShape(Graphics2D g2d) {
        for(int i=0; i<=3; i++) {
            drawSquare(g2d, NUM_COLS/2 + currentShape.getY(i),
                    NUM_ROWS/2 + currentShape.getX(i) , currentShape.getShape());
        }
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        paintShape(g2d);
        
    }
    
    private void drawSquare(Graphics g, int row, int col, Tetrominos shape) {
        
        int x = col * squareWidth();
        int y = row * squareHeight();
        Color color = COLORS[shape.ordinal()];
        g.setColor(color);
        g.fillRect(x + 1, y + 1, squareWidth() - 2, squareHeight() - 2);
        g.setColor(color.brighter());
        g.drawLine(x, y + squareHeight() - 1, x, y);
        g.drawLine(x, y, x + squareWidth() - 1, y);
        g.setColor(color.darker());
        g.drawLine(x + 1, y + squareHeight() - 1, x + squareWidth() - 1, y + squareHeight() - 1);
        g.drawLine(x + squareWidth() - 1, y + squareHeight() - 1, x + squareWidth() - 1, y + 1);
    }
    
    int squareWidth() {
        return getWidth() / NUM_COLS;
    }
    
    int squareHeight() {
        return getHeight() / NUM_ROWS;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
